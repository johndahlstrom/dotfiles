#
# WMFS2 configuration file
#

# Possible file inclusion:
# @include "file"
[root]
	background_command = "bash $HOME/.config/wmfs/status.sh"
[/root]

# Multi theme section
[themes]

  [theme]
     # No name mean default
     # name = "default"

     font = "-*-terminus-medium-*-*-*-16-*-*-*-*-*-*-*"

     # Bars
     bars_width = 20
     bars_fg = "#0174DF"
     bars_bg = "#000"

     # Element tags
     tags_normal_fg = "#0174DF"
     tags_normal_bg = "#000"
     # tags_normal_statusline = ""

     tags_sel_fg    = "#000"
     tags_sel_bg    = "#0174DF"
     # tags_sel_statusline = ""

     tags_occupied_fg = "#0174DF"
     tags_occupied_bg = "#000"
     tags_occupied_statusline = "\R[0;0;100;1;#0174DF]"

     tags_urgent_fg    = "#223322"
     tags_urgent_bg    = "#CC5544"
     # tags_urgent_statusline = ""

     tags_border_color = "#000"
     tags_border_width = 1

     # Frame / Client
     client_normal_fg = "#efefef"
     client_normal_bg = "#000"
     client_normal_statusline = "\s[5;12;#ff0000;X](1;client_close)"

     client_sel_fg = "#efefef"
     client_sel_bg = "#333"
     client_sel_statusline = "\s[5;12;#fff;X](1;client_close)"

     # client_free_statusline = ""

     frame_bg = "#222"
     client_titlebar_width = 0
     client_border_width = 1

   [/theme]

[/themes]

[bars]

  # Position:
  #
  # 0  Top
  # 1  Bottom
  # 2  Hide

  # Element type:
  #
  # t  Tags
  # s  Statustext (will take available space)
  # y  Systray (can be set only ONE time among all element)
  # l  Launcher (will be expended at launcher use)

  [bar]
     name = "default"
     position = 0
     screen = 0
     elements = "tlsy"   # element order in bar
     theme = "default"
  [/bar]

[/bars]

[tags]

  # Tag wrapping navigation
  circular = true
  border = false

  [tag] name = "web" [/tag]
  [tag] name = "code" [/tag]
  [tag] name = "social" [/tag]
  [tag] name = "mail" [/tag]
  [tag] name = "media" [/tag]

  # Mousebinds associated to Tags element button
  [mouse] button = "1" func = "tag_click" [/mouse]
  [mouse] button = "4" func = "tag_next"  [/mouse]
  [mouse] button = "5" func = "tag_prev"  [/mouse]


[/tags]

[client]

  # Padding between clients (default: 0) :
  #padding = 75

  # Give focus to new created client (default = false)
  autofocus = true

  theme = "default"
  key_modifier = "Super"

  # Focus type:
  #  enter : focus follow mouse (default)
  #  click : click to focus
  #  everything-else : disable mouse focus support
  focus = enter

  [mouse] button = "1" func = "client_focus_click"    [/mouse]
  [mouse] button = "1" func = "mouse_swap"            [/mouse]
  [mouse] button = "2" func = "mouse_tab"             [/mouse]
  [mouse] button = "3" func = "mouse_resize"          [/mouse]
  [mouse] button = "4" func = "client_focus_next_tab" [/mouse]
  [mouse] button = "5" func = "client_focus_prev_tab" [/mouse]

[/client]

[rules]

  [rule]
    instance = "chromium"
    tag    = 0 
    screen = 0
    free       = false
    tab        = false
    ignore_tag = false
  [/rule]
  [rule]
    instance = 'Mail'
    tag = 3
  [/rule]
  [rule]
    instance = 'skype'
    tag = 2
  [/rule]
  [rule]
    instance = 'vlc'
    tag = 4
  [/rule]
  [rule]
    instance = 'pidgin'
    tag = 2
  [/rule]


[/rules]

[launchers]

  # command can be an uicb function or an uicb function + extension (see example)
  [launcher]
     name = "exec"
     prompt = "Run:"

     # Example of uicb + ext:
     #   command = "spawn xterm -e"
     command = "spawn"

     width = 250
  [/launcher]

[/launchers]

[keys]

  [key] mod = {"Super"} key = "Return" func = "spawn" cmd = "xterm" [/key]

  [key] mod = {"Control", "Alt"} key = "q" func = "quit" [/key]
  [key] mod = {"Control", "Alt"} key = "r" func = "reload" [/key]

  # Tag manipulation
  [key] mod = {"Super"} key = "1" func = "tag_set" cmd = "0" [/key]
  [key] mod = {"Super"} key = "2" func = "tag_set" cmd = "1" [/key]
  [key] mod = {"Super"} key = "3" func = "tag_set" cmd = "2" [/key]
  [key] mod = {"Super"} key = "4" func = "tag_set" cmd = "3" [/key]
  [key] mod = {"Super"} key = "5" func = "tag_set" cmd = "4" [/key]
  [key] mod = {"Super"} key = "6" func = "tag_set" cmd = "5" [/key]
  [key] mod = {"Super"} key = "7" func = "tag_set" cmd = "6" [/key]
  [key] mod = {"Super"} key = "8" func = "tag_set" cmd = "7" [/key]

  [key] mod = {"Super", "Shift"} key = "F1" func = "tag_client" cmd = "0" [/key]
  [key] mod = {"Super", "Shift"} key = "F2" func = "tag_client" cmd = "1" [/key]
  [key] mod = {"Super", "Shift"} key = "F3" func = "tag_client" cmd = "2" [/key]
  [key] mod = {"Super", "Shift"} key = "F4" func = "tag_client" cmd = "3" [/key]
  [key] mod = {"Super", "Shift"} key = "F5" func = "tag_client" cmd = "4" [/key]
  [key] mod = {"Super", "Shift"} key = "F6" func = "tag_client" cmd = "5" [/key]
  [key] mod = {"Super", "Shift"} key = "F7" func = "tag_client" cmd = "6" [/key]
  [key] mod = {"Super", "Shift"} key = "F8" func = "tag_client" cmd = "7" [/key]

  [key] mod = {"Super"} key = "minus" func = "tag_del" [/key]
  [key] mod = {"Super", "Shift"} key = "minus" func = "tag_new" [/key]

  [key] mod = {"Control"} key = "Left"  func = "tag_prev" [/key]
  [key] mod = {"Control"} key = "Right"  func = "tag_next" [/key]

  [key] mod = {"Control"} key = "Up"  func = "screen_next" [/key]
  [key] mod = {"Control"} key = "Down" func = "screen_prev" [/key]

  [key] mod = {"Super"} key = "q" func = "client_close" [/key]

  # Resize selected tiled client with direction
  [key] mod = {"Super"} key = "h" func = "client_resize_left"   cmd = "20" [/key]
  [key] mod = {"Super"} key = "l" func = "client_resize_left"   cmd = "-20" [/key]
  [key] mod = {"Super"} key = "k" func = "client_resize_top"    cmd = "20" [/key]
  [key] mod = {"Super"} key = "j" func = "client_resize_top"    cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "h" func = "client_resize_right"  cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "l" func = "client_resize_right"  cmd = "20" [/key]
  [key] mod = {"Super", "Control"} key = "k" func = "client_resize_bottom" cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "j" func = "client_resize_bottom" cmd = "20" [/key]

  # Move to different tab
  [key] mod = {"Alt", "Control"} key = "Right" func = "tag_move_client_next" [/key]
  [key] mod = {"Alt", "Control"} key = "Left" func = "tag_move_client_prev" [/key]
  
  # Focus next / prev client and next / prev tabbed client
  [key] mod = { "Alt" }            key = "Tab" func = "client_focus_next" [/key]
  [key] mod = { "Alt", "Shift" }   key = "Tab" func = "client_focus_prev" [/key]

  # Layout manipulation
  [key] mod = {"Super"}          key = "m" func = "layout_vmirror" [/key]
  [key] mod = {"Super", "Shift"} key = "m" func = "layout_hmirror" [/key]
  [key] mod = {"Super"}          key = "r" func = "layout_rotate_right" [/key]
  [key] mod = {"Super", "Shift"} key = "r" func = "layout_rotate_left" [/key]

  # Layout set historic travelling function (TESTING)
  [key] mod = {"Super"} key = "o" func = "layout_prev_set" [/key]
  [key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]

  # Toggle client free/tile
  [key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]

  # Toggle client ignore_tag
  [key] mod = {"Super", "Shift"} key = "f" func = "client_toggle_ignore_tag" [/key]

  # Toggle infobar visibility
  [key] mod = {"Super", "Shift"} key = "h" func = "infobar_toggle_hide" cmd = "default" [/key]

  # Launcher
  [key] mod = {"Super"} key = "p" func = "launcher" cmd = "exec" [/key]

	#Multimedia keys
	[key] mod = {} key = "XF86AudioLowerVolume" func = "spawn" cmd = "amixer set Master 5%-" [/key]
	[key] mod = {} key = "XF86AudioRaiseVolume" func = "spawn" cmd = "amixer set Master 5%+" [/key]
	[key] mod = {} key = "XF86AudioMute" func = "spawn" cmd = "amixer set Master toggle" [/key]

[/keys]
